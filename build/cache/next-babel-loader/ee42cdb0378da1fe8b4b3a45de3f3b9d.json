{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport React from 'react';\nimport AdminLayout from '../../components/AdminLayout';\nimport { get_user } from '../../components/user/queries';\nimport { Query } from 'react-apollo';\nimport withData from '../../lib/withData';\nimport { Table, Row, Col } from 'react-bootstrap';\nimport Page from '../../components/Page';\nimport Card from '../../components/Card';\nimport { withRouter } from 'next/router';\nimport UserDeleteButton from '../../components/user/DeleteButton';\n\nvar View = /*#__PURE__*/function (_React$Component) {\n  _inherits(View, _React$Component);\n\n  var _super = _createSuper(View);\n\n  function View(props) {\n    var _this;\n\n    _classCallCheck(this, View);\n\n    _this = _super.call(this, props);\n    var userId = _this.props.router.query.userId;\n    _this.state = {\n      userId: userId\n    };\n    _this.fariane = [{\n      title: \"Acceuil\",\n      path: \"/\"\n    }, {\n      title: \"Users\",\n      path: \"/users/\"\n    }];\n    _this.onDelete = _this.onDelete.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(View, [{\n    key: \"onDelete\",\n    value: function onDelete() {\n      window.flash('L\\'utilisateur a bien été supprimée.', 'success');\n      this.props.history.push(\"/users/\");\n    }\n  }, {\n    key: \"header\",\n    value: function header() {\n      var userId = this.state.userId;\n      return __jsx(React.Fragment, null, __jsx(\"h3\", {\n        className: \"card-title\"\n      }, \"Utilisateur #\" + userId), __jsx(\"div\", {\n        className: \"card-tools\"\n      }, __jsx(Link, {\n        href: \"/users/edit?userId=\" + userId\n      }, __jsx(\"a\", {\n        className: \"btn btn-success btn-sm\",\n        \"data-toggle\": \"tooltip\",\n        title: \"\",\n        \"data-original-title\": \"Nouvelle\"\n      }, __jsx(\"i\", {\n        className: \"fa fa-pen-alt\"\n      }), \" Modifier\")), __jsx(UserDeleteButton, {\n        userId: userId\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var userId = this.state.userId;\n      return __jsx(AdminLayout, null, __jsx(Page, {\n        title: \"Utilisateurs\",\n        fariane: this.fariane\n      }, __jsx(Card, {\n        header: this.header()\n      }, __jsx(Query, {\n        query: get_user,\n        variables: {\n          userId: userId\n        },\n        pollInterval: 3000\n      }, function (_ref) {\n        var loading = _ref.loading,\n            error = _ref.error,\n            data = _ref.data;\n        if (loading) return __jsx(\"div\", null, \"Chargement en cours ...\");\n\n        if (error) {\n          console.log(error);\n          return __jsx(\"div\", null, \"Error\");\n        }\n\n        console.log(data);\n        if (!data.user) return \"User not found\";\n        return __jsx(Row, {\n          className: \"col-sm-12\"\n        }, __jsx(Col, {\n          className: \"col-sm-6 table-responsive\"\n        }, __jsx(\"table\", {\n          className: \"table\"\n        }, __jsx(\"tbody\", null, __jsx(\"tr\", null, __jsx(\"th\", {\n          style: {\n            width: \"50%\"\n          }\n        }, \"Nom:\"), __jsx(\"td\", null, data.user.firstname)), __jsx(\"tr\", null, __jsx(\"th\", {\n          style: {\n            width: \"50%\"\n          }\n        }, \"Pr\\xE9nom:\"), __jsx(\"td\", null, data.user.lastname)), __jsx(\"tr\", null, __jsx(\"th\", {\n          style: {\n            width: \"50%\"\n          }\n        }, \"Civilisation:\"), __jsx(\"td\", null, data.user.gender)), __jsx(\"tr\", null, __jsx(\"th\", {\n          style: {\n            width: \"50%\"\n          }\n        }, \"CNI:\"), __jsx(\"td\", null, data.user.cni)), __jsx(\"tr\", null, __jsx(\"th\", {\n          style: {\n            width: \"50%\"\n          }\n        }, \"Adresse:\"), __jsx(\"td\", null, data.user.address)), __jsx(\"tr\", null, __jsx(\"th\", null, \"Email:\"), __jsx(\"td\", null, data.user.email)), __jsx(\"tr\", null, __jsx(\"th\", null, \"T\\xE9l\\xE9phone:\"), __jsx(\"td\", null, data.user.phone))))), __jsx(Col, {\n          className: \"col-sm-6 table-responsive\"\n        }, __jsx(\"table\", {\n          className: \"table\"\n        }, __jsx(\"tbody\", null, __jsx(\"tr\", null, __jsx(\"th\", {\n          style: {\n            width: \"50%\"\n          }\n        }, \"Date de cr\\xE9ation:\"), __jsx(\"td\", null, new Date(data.user.createdAt).toLocaleString())), __jsx(\"tr\", null, __jsx(\"th\", {\n          style: {\n            width: \"50%\"\n          }\n        }, \"Derni\\xE8re modification:\"), __jsx(\"td\", null, new Date(data.user.updatedAt).toLocaleString())), __jsx(\"tr\", null, __jsx(\"th\", {\n          style: {\n            width: \"50%\"\n          }\n        }, \"R\\xF4le:\"), __jsx(\"td\", null, data.user.role && data.user.role.title))))));\n      }))));\n    }\n  }]);\n\n  return View;\n}(React.Component);\n\nexport default withData(withRouter(View));","map":null,"metadata":{},"sourceType":"module"}
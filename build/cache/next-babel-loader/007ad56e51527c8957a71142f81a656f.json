{"ast":null,"code":"var __jsx = React.createElement;\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport React from 'react';\nimport AdminLayout from '../../components/AdminLayout';\nimport { get_car_to_update, update_car } from '../../components/car/queries';\nimport { Query, Mutation } from 'react-apollo';\nimport withData from '../../lib/withData';\nimport { Table, Row, Col } from 'react-bootstrap';\nimport Page from '../../components/Page';\nimport Card from '../../components/Card';\nimport { withRouter } from 'next/router';\nimport CarForm from '../../components/car/CarForm';\nimport Router from 'next/router';\n\nclass Edit extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      carId\n    } = this.props.router.query;\n    this.state = {\n      carId: carId,\n      car: null\n    };\n    this.fariane = [{\n      title: \"Acceuil\",\n      path: \"/\"\n    }, {\n      title: \"Véhicules\",\n      path: \"/cars/\"\n    }];\n    this.onDelete = this.onDelete.bind(this);\n  }\n\n  onDelete() {\n    window.flash('Le véhicule a bien été supprimé.', 'success');\n    this.props.history.push(\"/cars/\");\n  }\n\n  header() {\n    const {\n      carId\n    } = this.state;\n    return __jsx(React.Fragment, null, __jsx(\"h3\", {\n      className: \"card-title\"\n    }, \"Véhicule #\" + carId), __jsx(\"div\", {\n      className: \"card-tools\"\n    }, __jsx(Link, {\n      href: \"/cars/edit/\" + carId\n    }, __jsx(\"a\", {\n      className: \"btn btn-success btn-sm\",\n      \"data-toggle\": \"tooltip\",\n      title: \"\",\n      \"data-original-title\": \"Nouveau\"\n    }, __jsx(\"i\", {\n      className: \"fa fa-pen-alt\"\n    }), \" Modifier\"))));\n  }\n\n  render() {\n    let {\n      carId,\n      car\n    } = this.state;\n\n    if (car) {\n      delete car.id;\n      delete car.brand;\n    }\n\n    return __jsx(AdminLayout, null, __jsx(Page, {\n      title: \"V\\xE9hicules\",\n      fariane: this.fariane\n    }, __jsx(Query, {\n      query: get_car_to_update,\n      variables: {\n        carId\n      },\n      _pollInterval: 3000\n    }, ({\n      loading,\n      error,\n      data\n    }) => {\n      if (loading) return __jsx(\"div\", null, \"Chargement en cours ...\");\n\n      if (error) {\n        console.log(error);\n        return __jsx(\"div\", null, \"Error\");\n      }\n\n      console.log(data);\n      if (!data.car) return \"Car not found\";\n\n      if (this.state.car == null) {\n        delete data.car.__typename;\n        car = this.state.car = data.car;\n      }\n\n      delete this.state.car.brand;\n      delete this.state.car.color;\n      delete this.state.car.category; //console.log(user)\n\n      return __jsx(Mutation, {\n        mutation: update_car,\n        variables: {\n          id: carId,\n          data: this.state.car\n        }\n      }, postMutation => __jsx(CarForm, {\n        car: car,\n        onSubmit: event => {\n          //alert(\"hello\")\n          event.preventDefault(); //console.log(user)\n\n          postMutation().then(result => {\n            //this.props.history.goBack();\n            //console.log(result)\n            alert('Le véhicule a bien été modifié.', 'success');\n            Router.push(\"/cars/view?carId=\" + result.data.updateCar.id);\n          });\n        },\n        onChange: car => this.setState({\n          car: car\n        })\n      }));\n    })));\n  }\n\n}\n\nexport default withData(withRouter(Edit));","map":null,"metadata":{},"sourceType":"module"}
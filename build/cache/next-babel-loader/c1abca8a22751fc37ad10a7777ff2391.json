{"ast":null,"code":"var _jsxFileName = \"/Users/belabed90/Documents/GitHub/crma_web/components/album/MultiUpload.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Query, Mutation } from 'react-apollo';\nimport { create_album } from './queries';\nexport default class MultiUpload extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"fileObj\", []);\n\n    _defineProperty(this, \"fileArray\", []);\n\n    this.state = {\n      file: [null],\n      albumId: null,\n      album: {\n        title: \"Test\"\n      }\n    };\n    this.uploadMultipleFiles = this.uploadMultipleFiles.bind(this);\n    this.uploadFiles = this.uploadFiles.bind(this);\n  }\n\n  uploadMultipleFiles(e) {\n    this.fileObj.push(e.target.files[0]);\n    this.fileArray.push(URL.createObjectURL(e.target.files[0]));\n    console.log(this.fileObj);\n    this.setState({\n      file: this.fileArray\n    });\n  }\n\n  uploadFiles(e) {\n    e.preventDefault();\n    console.log(this.state.file);\n  }\n\n  setAlbumId(value) {\n    this.setState({\n      albumId: result.data.createAlbum.id\n    });\n  }\n\n  render() {\n    const {\n      album,\n      albumId\n    } = this.state;\n    return __jsx(Mutation, {\n      mutation: create_album,\n      variables: {\n        data: this.state.album\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }, postMutation => {\n      if (!albumId) postMutation().then(result => {\n        //this.props.history.goBack();\n        alert('Album crÃ©e ' + result.data.createAlbum.id, 'success');\n        this.setAlbumId(result.data.createAlbum.id); //Router.push(\"/rentals/view?rentalId=\"+result.data.createBeforeRental.id);\n      });\n      return __jsx(\"form\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 22\n        }\n      }, (this.fileArray || []).map(url => __jsx(\"div\", {\n        className: \"col-sm-12 row\",\n        style: {\n          backgroundColor: 'white',\n          padding: '2px',\n          margin: '2px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        className: \"col-sm-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }\n      }, __jsx(\"img\", {\n        src: url,\n        alt: \"...\",\n        width: \"100px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }\n      })), __jsx(\"div\", {\n        className: \"col-sm-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }\n      }), __jsx(\"div\", {\n        className: \"col-sm-4\",\n        style: {\n          padding: '30px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      }, __jsx(\"a\", {\n        onClick: () => alert(\"hello\"),\n        className: \"btn btn-danger btn-sm\",\n        style: {\n          verticalAlign: 'middle'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 23\n        }\n      }, __jsx(\"i\", {\n        className: \"fa fa-trash\",\n        style: {\n          color: 'white'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }\n      }))))), __jsx(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }\n      }, __jsx(\"input\", {\n        type: \"file\",\n        className: \"form-control\",\n        id: \"file\",\n        onChange: this.uploadMultipleFiles,\n        _multiple: true,\n        style: {\n          display: 'none'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }\n      })), __jsx(\"button\", {\n        type: \"button\",\n        className: \"btn btn-danger btn-block\",\n        onClick: () => document.getElementById('file').click(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }\n      }, \"Charger des photos\"));\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/belabed90/Documents/GitHub/crma_web/components/album/MultiUpload.js"],"names":["React","Component","Query","Mutation","create_album","MultiUpload","constructor","props","state","file","albumId","album","title","uploadMultipleFiles","bind","uploadFiles","e","fileObj","push","target","files","fileArray","URL","createObjectURL","console","log","setState","preventDefault","setAlbumId","value","result","data","createAlbum","id","render","postMutation","then","alert","map","url","backgroundColor","padding","margin","verticalAlign","color","display","document","getElementById","click"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Query, Mutation } from 'react-apollo'\nimport {create_album} from './queries'\nexport default class MultiUpload extends Component {\n\n    fileObj = [];\n    fileArray = [];\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            file: [null],\n            albumId:null,\n            album:{\n              title:\"Test\"\n            }\n        }\n        this.uploadMultipleFiles = this.uploadMultipleFiles.bind(this)\n        this.uploadFiles = this.uploadFiles.bind(this)\n    }\n\n    uploadMultipleFiles(e) {\n        this.fileObj.push(e.target.files[0])\n        this.fileArray.push(URL.createObjectURL(e.target.files[0]))\n        console.log(this.fileObj)\n        this.setState({ file: this.fileArray })\n    }\n\n    uploadFiles(e) {\n        e.preventDefault()\n        console.log(this.state.file)\n    }\n    setAlbumId(value){\n      this.setState({albumId:result.data.createAlbum.id})\n    }\n    render() {\n        const {album, albumId} = this.state\n        return (\n          <Mutation mutation={create_album} variables={{data:this.state.album}} >\n            {postMutation => {\n              if( !albumId )\n              postMutation().then((result)=>{\n                //this.props.history.goBack();\n                alert('Album crÃ©e '+result.data.createAlbum.id, 'success')\n                this.setAlbumId(result.data.createAlbum.id)\n                //Router.push(\"/rentals/view?rentalId=\"+result.data.createBeforeRental.id);\n              })\n             return (<form>\n               {(this.fileArray || []).map(url => (\n                <div className=\"col-sm-12 row\" style={{backgroundColor:'white',padding:'2px',margin:'2px'}}>\n                    <div className=\"col-sm-4\" >\n                        <img src={url} alt=\"...\" width=\"100px\" />\n                    </div>\n                    <div className=\"col-sm-4\" >\n                    </div>\n                    <div className=\"col-sm-4\" style={{padding: '30px'}} >\n                      <a onClick={()=>alert(\"hello\")} className=\"btn btn-danger btn-sm\"  style={{verticalAlign: 'middle'}}>\n                        <i className=\"fa fa-trash\" style={{color:'white'}}></i>\n                      </a>\n                    </div>\n                </div>\n               ))}\n                <div className=\"form-group\">\n                    <input type=\"file\" className=\"form-control\" id=\"file\" onChange={this.uploadMultipleFiles} _multiple  style={{display:'none'}}/>\n                </div>\n                <button type=\"button\" className=\"btn btn-danger btn-block\" onClick={()=>document.getElementById('file').click()}>Charger des photos</button>\n            </form >\n          )}\n          }\n        </Mutation>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}
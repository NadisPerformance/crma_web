{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { Form, Row, Col, Button, InputGroup } from 'react-bootstrap';\nimport moment from 'moment';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nvar CustomerForm = /*#__PURE__*/function (_React$Component) {\n  _inherits(CustomerForm, _React$Component);\n\n  var _super = _createSuper(CustomerForm);\n\n  function CustomerForm(props) {\n    var _this;\n\n    _classCallCheck(this, CustomerForm);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      customer: {\n        type: 0,\n        company_name: \"\",\n        gender: \"M.\",\n        lastname: \"\",\n        firstname: \"\",\n        birthday: \"\",\n        cni: \"\",\n        driver_license: \"\",\n        city: \"\",\n        address: \"\",\n        email: \"\",\n        phone: \"\"\n      }\n    };\n    return _this;\n  }\n\n  _createClass(CustomerForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var customer = this.props.customer;\n\n      if (customer) {\n        this.state.customer = customer;\n      }\n\n      this.onChange();\n    }\n  }, {\n    key: \"setFirstname\",\n    value: function setFirstname(value) {\n      this.state.customer.firstname = value;\n      this.setState({\n        customer: this.state.customer\n      });\n      this.onChange();\n    }\n  }, {\n    key: \"setLastname\",\n    value: function setLastname(value) {\n      this.state.customer.lastname = value;\n      this.setState({\n        customer: this.state.customer\n      });\n      this.onChange();\n    }\n  }, {\n    key: \"setBirthday\",\n    value: function setBirthday(value) {\n      this.state.customer.birthday = value;\n      this.setState({\n        customer: this.state.customer\n      });\n      this.onChange();\n    }\n  }, {\n    key: \"setGender\",\n    value: function setGender(value) {\n      this.state.customer.gender = value;\n      this.setState({\n        customer: this.state.customer\n      });\n      this.onChange();\n    }\n  }, {\n    key: \"setCNI\",\n    value: function setCNI(value) {\n      this.state.customer.cni = value;\n      this.setState({\n        customer: this.state.customer\n      });\n      this.onChange();\n    }\n  }, {\n    key: \"setType\",\n    value: function setType(value) {\n      this.state.customer.type = value * 1;\n      this.setState({\n        customer: this.state.customer\n      });\n      this.onChange();\n    }\n  }, {\n    key: \"setDriver_license\",\n    value: function setDriver_license(value) {\n      this.state.customer.driver_license = value;\n      this.setState({\n        customer: this.state.customer\n      });\n      this.onChange();\n    }\n  }, {\n    key: \"setCity\",\n    value: function setCity(value) {\n      this.state.customer.city = value;\n      this.setState({\n        customer: this.state.customer\n      });\n      this.onChange();\n    }\n  }, {\n    key: \"setAddress\",\n    value: function setAddress(value) {\n      this.state.customer.address = value;\n      this.setState({\n        customer: this.state.customer\n      });\n      this.onChange();\n    }\n  }, {\n    key: \"setEmail\",\n    value: function setEmail(value) {\n      this.state.customer.email = value;\n      this.setState({\n        customer: this.state.customer\n      });\n      this.onChange();\n    }\n  }, {\n    key: \"setPhone\",\n    value: function setPhone(value) {\n      this.state.customer.phone = value;\n      this.setState({\n        customer: this.state.customer\n      });\n      this.onChange();\n    }\n  }, {\n    key: \"setCompany_name\",\n    value: function setCompany_name(value) {\n      this.state.customer.company_name = value;\n      this.setState({\n        customer: this.state.customer\n      });\n      this.onChange();\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange() {\n      if (this.props.onChange) this.props.onChange(this.state.customer);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var customer = this.state.customer;\n      return __jsx(Form, {\n        onSubmit: function onSubmit(event) {\n          if (_this2.props.onSubmit) _this2.props.onSubmit(event);\n        }\n      }, __jsx(Form.Group, {\n        controlId: \"formBasicEmail\"\n      }, __jsx(Form.Label, null, \"Type:\"), __jsx(Form.Control, {\n        value: customer.type,\n        onChange: function onChange(event) {\n          return _this2.setType(event.target.value);\n        },\n        as: \"select\"\n      }, __jsx(\"option\", {\n        value: \"0\"\n      }, \"Particulier\"), __jsx(\"option\", {\n        value: \"1\"\n      }, \"Soci\\xE9t\\xE9\"))), customer.type == 1 && __jsx(Form.Group, {\n        controlId: \"formBasicEmail\"\n      }, __jsx(Form.Label, null, \"Soci\\xE9t\\xE9:\"), __jsx(Form.Control, {\n        value: customer.company_name,\n        type: \"text\",\n        onChange: function onChange(event) {\n          return _this2.setCompany_name(event.target.value);\n        },\n        placeholder: \"Soci\\xE9t\\xE9\"\n      })), __jsx(Form.Group, {\n        controlId: \"formBasicEmail\"\n      }, __jsx(Form.Label, null, \"Nom:\"), __jsx(Form.Control, {\n        value: customer.lastname,\n        type: \"text\",\n        onChange: function onChange(event) {\n          return _this2.setLastname(event.target.value);\n        },\n        placeholder: \"Nom \"\n      })), __jsx(Form.Group, {\n        controlId: \"formBasicEmail\"\n      }, __jsx(Form.Label, null, \"Pr\\xE9nom:\"), __jsx(Form.Control, {\n        value: customer.firstname,\n        type: \"text\",\n        onChange: function onChange(event) {\n          return _this2.setFirstname(event.target.value);\n        },\n        placeholder: \"Prenom \"\n      })), __jsx(Form.Group, {\n        controlId: \"formBasicEmail\"\n      }, __jsx(Form.Label, null, \"Date de naissance:\"), __jsx(\"br\", null), __jsx(DatePicker, {\n        selected: Date.parse(moment(customer.birthday).toDate()),\n        onChange: function onChange(date) {\n          return _this2.setBirthday(date);\n        },\n        isClearable: true,\n        dateFormat: \"d/MM/yyyy\",\n        placeholderText: \"Date de naissance\"\n      })), __jsx(Form.Group, {\n        controlId: \"formBasicEmail\"\n      }, __jsx(Form.Label, null, \"Civilit\\xE9:\"), __jsx(Form.Control, {\n        value: customer.gender,\n        onChange: function onChange(event) {\n          return _this2.setGender(event.target.value);\n        },\n        as: \"select\"\n      }, __jsx(\"option\", {\n        value: \"M.\"\n      }, \"M.\"), __jsx(\"option\", {\n        value: \"Mme\"\n      }, \"Mme\"), __jsx(\"option\", {\n        value: \"Mlle\"\n      }, \"Mlle\"))), __jsx(Form.Group, {\n        controlId: \"formBasicEmail\"\n      }, __jsx(Form.Label, null, \"CNI:\"), __jsx(Form.Control, {\n        value: customer.cni,\n        type: \"text\",\n        onChange: function onChange(event) {\n          return _this2.setCNI(event.target.value);\n        },\n        placeholder: \"CNI \"\n      })), __jsx(Form.Group, {\n        controlId: \"formBasicEmail\"\n      }, __jsx(Form.Label, null, \"Permis de conduite:\"), __jsx(Form.Control, {\n        value: customer.driver_license,\n        type: \"text\",\n        onChange: function onChange(event) {\n          return _this2.setDriver_license(event.target.value);\n        },\n        placeholder: \"Permis de conduite \"\n      })), __jsx(Form.Group, {\n        controlId: \"formBasicEmail\"\n      }, __jsx(Form.Label, null, \"Ville:\"), __jsx(Form.Control, {\n        value: customer.city,\n        type: \"text\",\n        onChange: function onChange(event) {\n          return _this2.setCity(event.target.value);\n        },\n        placeholder: \"Ville \"\n      })), __jsx(Form.Group, {\n        controlId: \"formBasicEmail\"\n      }, __jsx(Form.Label, null, \"Adresse:\"), __jsx(Form.Control, {\n        value: customer.address,\n        type: \"text\",\n        onChange: function onChange(event) {\n          return _this2.setAddress(event.target.value);\n        },\n        placeholder: \"Adresse \"\n      })), __jsx(Form.Group, {\n        controlId: \"formBasicEmail\"\n      }, __jsx(Form.Label, null, \"E-mail:\"), __jsx(Form.Control, {\n        value: customer.email,\n        type: \"text\",\n        onChange: function onChange(event) {\n          return _this2.setEmail(event.target.value);\n        },\n        placeholder: \"E-mail \"\n      })), __jsx(Form.Group, {\n        controlId: \"formBasicEmail\"\n      }, __jsx(Form.Label, null, \"T\\xE9l\\xE9phone:\"), __jsx(Form.Control, {\n        value: customer.phone,\n        type: \"text\",\n        onChange: function onChange(event) {\n          return _this2.setPhone(event.target.value);\n        },\n        placeholder: \"T\\xE9l\\xE9phone \"\n      })), __jsx(\"div\", {\n        className: \"text-right\",\n        style: {\n          margin: 10\n        }\n      }, __jsx(Button, {\n        variant: \"primary\",\n        type: \"submit\"\n      }, \"Enregistrer\")));\n    }\n  }]);\n\n  return CustomerForm;\n}(React.Component);\n\nvar styles = {\n  btnXs: {\n    padding: \".25rem .4rem\",\n    fontSize: \".875rem\",\n    lineHeight: 0.5,\n    borderRadius: \".2rem\"\n  }\n};\nexport default CustomerForm;","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation delete_car($id: ID!)  {\\n    deleteCar(id:$id){\\n        statut_code\\n        message\\n    }\\n  }\\n\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation update_car($data:CarInput!)  {\\n    createCar(data:$data){\\n        id\\n    }\\n  }\\n\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation update_car($id: ID!, $data:CarInput!)  {\\n    updateCar(id:$id,data:$data){\\n        id\\n        plate_number\\n        brandId\\n        model\\n        model_date\\n        categoryId\\n        price\\n        colorId\\n        chassis_number\\n        statusId\\n        brand{\\n          id\\n          name\\n        }\\n        category{\\n          id\\n          title\\n        }\\n        color{\\n          id\\n          name\\n        }\\n    }\\n  }\\n\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\nquery get_car_to_update($carId:ID!){\\n    car(id:$carId){\\n        id\\n        plate_number\\n        brandId\\n        model\\n        model_date\\n        categoryId\\n        price\\n        colorId\\n        chassis_number\\n        statusId\\n  }\\n}\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\nquery get_car($carId:ID!){\\n    car(id:$carId){\\n        id\\n        plate_number\\n        brandId\\n        model\\n        model_date\\n        categoryId\\n        price\\n        colorId\\n        chassis_number\\n        statusId\\n        picture\\n        picture_url\\n        createdAt\\n        updatedAt\\n        brand{\\n          id\\n          name\\n        }\\n        category{\\n          id\\n          title\\n        }\\n        color{\\n          id\\n          name\\n        }\\n        status{\\n          id\\n          title\\n        }\\n        car_insurances{\\n          id\\n          date_begin\\n          date_end\\n          insurance{\\n            id\\n            name\\n          }\\n        }\\n        technical_controls{\\n          id\\n          date_begin\\n          date_end\\n        }\\n  }\\n}\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n{\\n  cars {\\n    edges{\\n        node{\\n            id\\n            plate_number\\n            brandId\\n            model\\n            model_date\\n            categoryId\\n            price\\n            colorId\\n            chassis_number\\n            statusId\\n            picture_url\\n            picture\\n            brand{\\n              id\\n              name\\n            }\\n            category{\\n              id\\n              title\\n            }\\n            color{\\n              id\\n              name\\n            }\\n            status{\\n              id\\n              title\\n            }\\n        }\\n    }\\n  }\\n}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nexport var get_cars = gql(_templateObject());\nexport var get_car = gql(_templateObject2());\nexport var get_car_to_update = gql(_templateObject3());\nexport var update_car = gql(_templateObject4());\nexport var create_car = gql(_templateObject5());\nexport var delete_car = gql(_templateObject6());\nexport default (function () {\n  return \"Show page working ! \";\n});","map":{"version":3,"sources":["/Users/belabed90/Documents/GitHub/crma_web/components/car/queries.js"],"names":["gql","get_cars","get_car","get_car_to_update","update_car","create_car","delete_car"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AAEA,OAAO,IAAMC,QAAQ,GAAGD,GAAH,mBAAd;AAuCP,OAAO,IAAME,OAAO,GAAGF,GAAH,oBAAb;AAmDP,OAAO,IAAMG,iBAAiB,GAAGH,GAAH,oBAAvB;AAiBP,OAAO,IAAMI,UAAU,GAAGJ,GAAH,oBAAhB;AA6BP,OAAO,IAAMK,UAAU,GAAGL,GAAH,oBAAhB;AASP,OAAO,IAAMM,UAAU,GAAGN,GAAH,oBAAhB;AAUP,gBAAe,YAAM;AACrB,SAAO,sBAAP;AACC,CAFD","sourcesContent":["import gql from 'graphql-tag'\n\nexport const get_cars = gql`\n{\n  cars {\n    edges{\n        node{\n            id\n            plate_number\n            brandId\n            model\n            model_date\n            categoryId\n            price\n            colorId\n            chassis_number\n            statusId\n            picture_url\n            picture\n            brand{\n              id\n              name\n            }\n            category{\n              id\n              title\n            }\n            color{\n              id\n              name\n            }\n            status{\n              id\n              title\n            }\n        }\n    }\n  }\n}\n`\n\nexport const get_car = gql`\nquery get_car($carId:ID!){\n    car(id:$carId){\n        id\n        plate_number\n        brandId\n        model\n        model_date\n        categoryId\n        price\n        colorId\n        chassis_number\n        statusId\n        picture\n        picture_url\n        createdAt\n        updatedAt\n        brand{\n          id\n          name\n        }\n        category{\n          id\n          title\n        }\n        color{\n          id\n          name\n        }\n        status{\n          id\n          title\n        }\n        car_insurances{\n          id\n          date_begin\n          date_end\n          insurance{\n            id\n            name\n          }\n        }\n        technical_controls{\n          id\n          date_begin\n          date_end\n        }\n  }\n}\n`\n\nexport const get_car_to_update = gql`\nquery get_car_to_update($carId:ID!){\n    car(id:$carId){\n        id\n        plate_number\n        brandId\n        model\n        model_date\n        categoryId\n        price\n        colorId\n        chassis_number\n        statusId\n  }\n}\n`\n\nexport const update_car = gql`\n  mutation update_car($id: ID!, $data:CarInput!)  {\n    updateCar(id:$id,data:$data){\n        id\n        plate_number\n        brandId\n        model\n        model_date\n        categoryId\n        price\n        colorId\n        chassis_number\n        statusId\n        brand{\n          id\n          name\n        }\n        category{\n          id\n          title\n        }\n        color{\n          id\n          name\n        }\n    }\n  }\n\n`\nexport const create_car = gql`\n  mutation update_car($data:CarInput!)  {\n    createCar(data:$data){\n        id\n    }\n  }\n\n`\n\nexport const delete_car = gql`\n  mutation delete_car($id: ID!)  {\n    deleteCar(id:$id){\n        statut_code\n        message\n    }\n  }\n\n`\n\nexport default () => {\nreturn \"Show page working ! \";\n}\n"]},"metadata":{},"sourceType":"module"}
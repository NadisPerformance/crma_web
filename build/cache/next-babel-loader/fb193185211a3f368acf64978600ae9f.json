{"ast":null,"code":"var __jsx = React.createElement;\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport React from 'react';\nimport AdminLayout from '../../components/AdminLayout';\nimport { create_booking } from '../../components/booking/queries';\nimport { Query, Mutation } from 'react-apollo';\nimport withData from '../../lib/withData';\nimport { Table, Row, Col } from 'react-bootstrap';\nimport Page from '../../components/Page';\nimport Card from '../../components/Card';\nimport { withRouter } from 'next/router';\nimport BookingForm from '../../components/booking/BookingForm';\n\nclass Add extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      car: null\n    };\n    this.fariane = [{\n      title: \"Acceuil\",\n      path: \"/\"\n    }, {\n      title: \"Réservations\",\n      path: \"/bookings/list\"\n    }];\n    this.onDelete = this.onDelete.bind(this);\n  }\n\n  onDelete() {\n    window.flash('La réservation a bien été supprimée.', 'success');\n    this.props.history.push(\"/bookings/\");\n  }\n\n  header() {\n    return __jsx(React.Fragment, null, __jsx(\"h3\", {\n      className: \"card-title\"\n    }, \"Nouvelle réservation \"), __jsx(\"div\", {\n      className: \"card-tools\"\n    }, __jsx(Link, {\n      href: \"/bookings/add\"\n    }, __jsx(\"a\", {\n      className: \"btn btn-success btn-sm\",\n      \"data-toggle\": \"tooltip\",\n      title: \"\",\n      \"data-original-title\": \"Nouvelle\"\n    }, __jsx(\"i\", {\n      className: \"fa fa-pen-alt\"\n    }), \" Nouvelle\"))));\n  }\n\n  render() {\n    let {\n      booking\n    } = this.state;\n    return __jsx(AdminLayout, null, __jsx(Page, {\n      title: \"R\\xE9servation\",\n      fariane: this.fariane\n    }, __jsx(Mutation, {\n      mutation: create_booking,\n      variables: {\n        data: this.state.booking\n      }\n    }, postMutation => __jsx(BookingForm, {\n      booking: booking,\n      onSubmit: event => {\n        //alert(\"hello\")\n        event.preventDefault(); //console.log(car)\n\n        postMutation().then(result => {\n          //this.props.history.goBack();\n          alert('La réservation a bien été crée.', 'success');\n          Router.push(\"/bookings/view?bookingId=\" + result.data.createBooking.id);\n        });\n      },\n      onChange: booking => this.setState({\n        booking: booking\n      })\n    }))));\n  }\n\n}\n\nexport default withData(withRouter(Add));","map":null,"metadata":{},"sourceType":"module"}
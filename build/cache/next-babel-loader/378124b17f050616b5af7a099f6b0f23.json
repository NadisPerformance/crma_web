{"ast":null,"code":"var _jsxFileName = \"/Users/belabed90/Documents/GitHub/crma_web/components/car/SelectInput.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Select from 'react-select';\nimport { get_cars } from './queries';\nimport { Query } from 'react-apollo';\n\nclass SelectInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedId: 0\n    };\n    this.setSelectedId = this.setSelectedId.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      selectedId\n    } = this.props;\n\n    if (selectedId) {\n      this.state.selectedId = selectedId;\n      this.onChange(selectedId);\n    }\n  }\n\n  setSelectedId(value) {\n    this.setState({\n      selectedId: value * 1\n    });\n    this.onChange(value);\n  }\n\n  onChange(value) {\n    if (this.props.onChange) this.props.onChange(value * 1);\n  }\n\n  render() {\n    const {\n      selectedId\n    } = this.state;\n    return __jsx(Query, {\n      query: get_cars,\n      pollInterval: 3000,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, ({\n      loading,\n      error,\n      data\n    }) => {\n      if (loading) return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 31\n        }\n      }, \"Chargement en cours ...\");\n\n      if (error) {\n        console.log(error);\n        return __jsx(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 20\n          }\n        }, \"Error\");\n      }\n\n      var options = []; //console.log(data.roles.edges)\n\n      var defaultValue;\n\n      for (var i = 0; i < data.cars.edges.length; i++) {\n        var car = data.cars.edges[i].node;\n        options.push({\n          value: car.id,\n          label: car.brand.name + ' ' + car.model + ' - ' + car.plate_number\n        });\n        if (car.id == selectedId) defaultValue = {\n          value: car.id,\n          label: car.brand.name + ' ' + car.model + ' - ' + car.plate_number\n        };\n      }\n\n      if (selectedId == 0 && data.cars.edges[0]) this.setSelectedId(data.cars.edges[0].node.id); //console.log(options)\n\n      return __jsx(Select, {\n        className: \"basic-single\",\n        classNamePrefix: \"select\",\n        defaultValue: defaultValue,\n        isSearchable: true,\n        name: \"car\",\n        options: options,\n        onChange: ({\n          value\n        }) => this.setSelectedId(value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }\n      });\n    });\n  }\n\n}\n\nconst styles = {\n  btnXs: {\n    padding: \".25rem .4rem\",\n    fontSize: \".875rem\",\n    lineHeight: 0.5,\n    borderRadius: \".2rem\"\n  }\n};\nexport default SelectInput;","map":{"version":3,"sources":["/Users/belabed90/Documents/GitHub/crma_web/components/car/SelectInput.js"],"names":["React","Select","get_cars","Query","SelectInput","Component","constructor","props","state","selectedId","setSelectedId","bind","onChange","componentDidMount","value","setState","render","loading","error","data","console","log","options","defaultValue","i","cars","edges","length","car","node","push","id","label","brand","name","model","plate_number","styles","btnXs","padding","fontSize","lineHeight","borderRadius"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAAQC,QAAR,QAAuB,WAAvB;AACA,SAASC,KAAT,QAAsB,cAAtB;;AACA,MAAMC,WAAN,SAA0BJ,KAAK,CAACK,SAAhC,CAAyC;AACvCC,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAC;AADA,KAAb;AAGA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAhB;AACD;;AACDE,EAAAA,iBAAiB,GAAE;AACjB,UAAM;AAACJ,MAAAA;AAAD,QAAe,KAAKF,KAA1B;;AACA,QAAGE,UAAH,EAAc;AACZ,WAAKD,KAAL,CAAWC,UAAX,GAAwBA,UAAxB;AACA,WAAKG,QAAL,CAAcH,UAAd;AACD;AACF;;AACDC,EAAAA,aAAa,CAACI,KAAD,EAAO;AAClB,SAAKC,QAAL,CAAc;AAACN,MAAAA,UAAU,EAACK,KAAK,GAAC;AAAlB,KAAd;AACA,SAAKF,QAAL,CAAcE,KAAd;AACD;;AACDF,EAAAA,QAAQ,CAACE,KAAD,EAAO;AACb,QAAG,KAAKP,KAAL,CAAWK,QAAd,EACE,KAAKL,KAAL,CAAWK,QAAX,CAAoBE,KAAK,GAAC,CAA1B;AACH;;AACDE,EAAAA,MAAM,GAAI;AACR,UAAM;AAACP,MAAAA;AAAD,QAAe,KAAKD,KAA1B;AACA,WACE,MAAC,KAAD;AAAO,MAAA,KAAK,EAAEN,QAAd;AAAwB,MAAA,YAAY,EAAE,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAAC;AAAEe,MAAAA,OAAF;AAAWC,MAAAA,KAAX;AAAkBC,MAAAA;AAAlB,KAAD,KAA8B;AAC7B,UAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAAP;;AACb,UAAIC,KAAJ,EAAW;AACTE,QAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACD;;AACD,UAAII,OAAO,GAAE,EAAb,CAN6B,CAO7B;;AACA,UAAIC,YAAJ;;AACA,WAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAGL,IAAI,CAACM,IAAL,CAAUC,KAAV,CAAgBC,MAAjC,EAAyCH,CAAC,EAA1C,EAA6C;AAC3C,YAAII,GAAG,GAAIT,IAAI,CAACM,IAAL,CAAUC,KAAV,CAAgBF,CAAhB,EAAmBK,IAA9B;AACAP,QAAAA,OAAO,CAACQ,IAAR,CAAa;AAAChB,UAAAA,KAAK,EAACc,GAAG,CAACG,EAAX;AAAeC,UAAAA,KAAK,EAACJ,GAAG,CAACK,KAAJ,CAAUC,IAAV,GAAe,GAAf,GAAmBN,GAAG,CAACO,KAAvB,GAA6B,KAA7B,GAAmCP,GAAG,CAACQ;AAA5D,SAAb;AACA,YAAGR,GAAG,CAACG,EAAJ,IAAUtB,UAAb,EACEc,YAAY,GAAC;AAACT,UAAAA,KAAK,EAACc,GAAG,CAACG,EAAX;AAAeC,UAAAA,KAAK,EAACJ,GAAG,CAACK,KAAJ,CAAUC,IAAV,GAAe,GAAf,GAAmBN,GAAG,CAACO,KAAvB,GAA6B,KAA7B,GAAmCP,GAAG,CAACQ;AAA5D,SAAb;AAEH;;AACD,UAAG3B,UAAU,IAAG,CAAb,IAAmBU,IAAI,CAACM,IAAL,CAAUC,KAAV,CAAgB,CAAhB,CAAtB,EACE,KAAKhB,aAAL,CAAmBS,IAAI,CAACM,IAAL,CAAUC,KAAV,CAAgB,CAAhB,EAAmBG,IAAnB,CAAwBE,EAA3C,EAjB2B,CAkB7B;;AACA,aACE,MAAC,MAAD;AACG,QAAA,SAAS,EAAC,cADb;AAEG,QAAA,eAAe,EAAC,QAFnB;AAGG,QAAA,YAAY,EAAER,YAHjB;AAIG,QAAA,YAAY,EAAE,IAJjB;AAKG,QAAA,IAAI,EAAC,KALR;AAMG,QAAA,OAAO,EAAED,OANZ;AAOG,QAAA,QAAQ,EAAE,CAAC;AAACR,UAAAA;AAAD,SAAD,KAAW,KAAKJ,aAAL,CAAmBI,KAAnB,CAPxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAWD,KA/BH,CADF;AAmCD;;AA7DsC;;AAgEzC,MAAMuB,MAAM,GAAE;AACZC,EAAAA,KAAK,EAAC;AACJC,IAAAA,OAAO,EAAE,cADL;AAEJC,IAAAA,QAAQ,EAAE,SAFN;AAGJC,IAAAA,UAAU,EAAE,GAHR;AAIJC,IAAAA,YAAY,EAAE;AAJV;AADM,CAAd;AASA,eAAetC,WAAf","sourcesContent":["import React from 'react'\nimport Select from 'react-select';\nimport {get_cars} from './queries'\nimport { Query } from 'react-apollo'\nclass SelectInput extends React.Component{\n  constructor (props) {\n    super(props)\n    this.state = {\n      selectedId:0\n    }\n    this.setSelectedId = this.setSelectedId.bind(this)\n    this.onChange = this.onChange.bind(this)\n  }\n  componentDidMount(){\n    const {selectedId} = this.props\n    if(selectedId){\n      this.state.selectedId = selectedId\n      this.onChange(selectedId)\n    }\n  }\n  setSelectedId(value){\n    this.setState({selectedId:value*1})\n    this.onChange(value)\n  }\n  onChange(value){\n    if(this.props.onChange)\n      this.props.onChange(value*1)\n  }\n  render () {\n    const {selectedId} = this.state\n    return (\n      <Query query={get_cars} pollInterval={3000} >\n        {({ loading, error, data }) => {\n          if (loading) return <div>Chargement en cours ...</div>\n          if (error) {\n            console.log(error)\n            return <div>Error</div>\n          }\n          var options= [];\n          //console.log(data.roles.edges)\n          var defaultValue\n          for(var i=0; i < data.cars.edges.length; i++){\n            var car =  data.cars.edges[i].node\n            options.push({value:car.id, label:car.brand.name+' '+car.model+' - '+car.plate_number})\n            if(car.id == selectedId)\n              defaultValue={value:car.id, label:car.brand.name+' '+car.model+' - '+car.plate_number}\n\n          }\n          if(selectedId== 0 &&  data.cars.edges[0] )\n            this.setSelectedId(data.cars.edges[0].node.id)\n          //console.log(options)\n          return (\n            <Select\n               className=\"basic-single\"\n               classNamePrefix=\"select\"\n               defaultValue={defaultValue}\n               isSearchable={true}\n               name=\"car\"\n               options={options}\n               onChange={({value})=>this.setSelectedId(value)}\n             />\n          )\n        }}\n        </Query>\n    )\n  }\n}\n\nconst styles ={\n  btnXs:{\n    padding: \".25rem .4rem\",\n    fontSize: \".875rem\",\n    lineHeight: 0.5,\n    borderRadius: \".2rem\"\n  }\n}\n\nexport default SelectInput;\n"]},"metadata":{},"sourceType":"module"}
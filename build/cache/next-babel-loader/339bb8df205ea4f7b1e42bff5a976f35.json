{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/belabed90/Documents/GitHub/crma_web/components/customer/SelectInput.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Select from 'react-select';\nimport { get_customers } from './queries';\nimport { Query } from 'react-apollo';\n\nvar SelectInput = /*#__PURE__*/function (_React$Component) {\n  _inherits(SelectInput, _React$Component);\n\n  var _super = _createSuper(SelectInput);\n\n  function SelectInput(props) {\n    var _this;\n\n    _classCallCheck(this, SelectInput);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      selectedId: 0\n    };\n    _this.setSelectedId = _this.setSelectedId.bind(_assertThisInitialized(_this));\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(SelectInput, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var selectedId = this.props.selectedId;\n\n      if (selectedId) {\n        this.state.selectedId = selectedId;\n        this.onChange(selectedId);\n      }\n    }\n  }, {\n    key: \"setSelectedId\",\n    value: function setSelectedId(value) {\n      this.setState({\n        selectedId: value * 1\n      });\n      this.onChange(value);\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(value) {\n      if (this.props.onChange) this.props.onChange(value * 1);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var selectedId = this.state.selectedId;\n      return __jsx(Query, {\n        query: get_customers,\n        pollInterval: 3000,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 7\n        }\n      }, function (_ref) {\n        var loading = _ref.loading,\n            error = _ref.error,\n            data = _ref.data;\n        if (loading) return __jsx(\"div\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 31\n          }\n        }, \"Chargement en cours ...\");\n\n        if (error) {\n          console.log(error);\n          return __jsx(\"div\", {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 20\n            }\n          }, \"Error\");\n        }\n\n        var options = []; //console.log(data.roles.edges)\n\n        var defaultValue;\n\n        for (var i = 0; i < data.customers.edges.length; i++) {\n          var customer = data.customers.edges[i].node;\n          options.push({\n            value: customer.id,\n            label: customer.lastname + ' ' + customer.firstname\n          });\n          if (customer.id == selectedId) defaultValue = {\n            value: customer.id,\n            label: customer.lastname + ' ' + customer.firstname\n          };\n        }\n\n        if (!_this2.state.selectedId && data.customers.edges[0]) _this2.setSelectedId(data.customers.edges[0].node.id); //console.log(options)\n\n        return __jsx(Select, {\n          className: \"basic-single\",\n          classNamePrefix: \"select\",\n          defaultValue: defaultValue,\n          isSearchable: true,\n          name: \"customer\",\n          options: options,\n          onChange: function onChange(_ref2) {\n            var value = _ref2.value;\n            return _this2.setSelectedId(value);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }\n        });\n      });\n    }\n  }]);\n\n  return SelectInput;\n}(React.Component);\n\nvar styles = {\n  btnXs: {\n    padding: \".25rem .4rem\",\n    fontSize: \".875rem\",\n    lineHeight: 0.5,\n    borderRadius: \".2rem\"\n  }\n};\nexport default SelectInput;","map":{"version":3,"sources":["/Users/belabed90/Documents/GitHub/crma_web/components/customer/SelectInput.js"],"names":["React","Select","get_customers","Query","SelectInput","props","state","selectedId","setSelectedId","bind","onChange","value","setState","loading","error","data","console","log","options","defaultValue","i","customers","edges","length","customer","node","push","id","label","lastname","firstname","Component","styles","btnXs","padding","fontSize","lineHeight","borderRadius"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Select from 'react-select';\nimport {get_customers} from './queries'\nimport { Query } from 'react-apollo'\nclass SelectInput extends React.Component{\n  constructor (props) {\n    super(props)\n    this.state = {\n      selectedId:0\n    }\n    this.setSelectedId = this.setSelectedId.bind(this)\n    this.onChange = this.onChange.bind(this)\n  }\n  componentDidMount(){\n    const {selectedId} = this.props\n    if(selectedId){\n      this.state.selectedId = selectedId\n      this.onChange(selectedId)\n    }\n  }\n  setSelectedId(value){\n    this.setState({selectedId:value*1})\n    this.onChange(value)\n  }\n  onChange(value){\n    if(this.props.onChange)\n      this.props.onChange(value*1)\n  }\n  render () {\n    const {selectedId} = this.state\n    return (\n      <Query query={get_customers} pollInterval={3000} >\n        {({ loading, error, data }) => {\n          if (loading) return <div>Chargement en cours ...</div>\n          if (error) {\n            console.log(error)\n            return <div>Error</div>\n          }\n          var options= [];\n          //console.log(data.roles.edges)\n          var defaultValue\n          for(var i=0; i < data.customers.edges.length; i++){\n            var customer =  data.customers.edges[i].node\n            options.push({value:customer.id, label:customer.lastname+' '+customer.firstname })\n            if(customer.id == selectedId)\n              defaultValue={value:customer.id, label:customer.lastname+' '+customer.firstname}\n\n          }\n          if(!this.state.selectedId &&  data.customers.edges[0] )\n            this.setSelectedId(data.customers.edges[0].node.id)\n          //console.log(options)\n          return (\n            <Select\n               className=\"basic-single\"\n               classNamePrefix=\"select\"\n               defaultValue={defaultValue}\n               isSearchable={true}\n               name=\"customer\"\n               options={options}\n               onChange={({value})=>this.setSelectedId(value)}\n             />\n          )\n        }}\n        </Query>\n    )\n  }\n}\n\nconst styles ={\n  btnXs:{\n    padding: \".25rem .4rem\",\n    fontSize: \".875rem\",\n    lineHeight: 0.5,\n    borderRadius: \".2rem\"\n  }\n}\n\nexport default SelectInput;\n"]},"metadata":{},"sourceType":"module"}
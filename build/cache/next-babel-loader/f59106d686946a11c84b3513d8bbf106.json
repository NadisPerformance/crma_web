{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport React from 'react';\nimport AdminLayout from '../../components/AdminLayout';\nimport { create_color } from '../../components/color/queries';\nimport { Query, Mutation } from 'react-apollo';\nimport withData from '../../lib/withData';\nimport { Table, Row, Col } from 'react-bootstrap';\nimport Page from '../../components/Page';\nimport Card from '../../components/Card';\nimport { withRouter } from 'next/router';\nimport ColorForm from '../../components/color/ColorForm';\n\nvar Add = /*#__PURE__*/function (_React$Component) {\n  _inherits(Add, _React$Component);\n\n  var _super = _createSuper(Add);\n\n  function Add(props) {\n    var _this;\n\n    _classCallCheck(this, Add);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      color: null\n    };\n    _this.fariane = [{\n      title: \"Acceuil\",\n      path: \"/\"\n    }, {\n      title: \"Couleurs\",\n      path: \"/colors/\"\n    }];\n    _this.onDelete = _this.onDelete.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Add, [{\n    key: \"onDelete\",\n    value: function onDelete() {\n      window.flash('L\\'utilisateur a bien été supprimée.', 'success');\n      this.props.history.push(\"/colorss/\");\n    }\n  }, {\n    key: \"header\",\n    value: function header() {\n      return __jsx(React.Fragment, null, __jsx(\"h3\", {\n        className: \"card-title\"\n      }, \"Nouveau véhicule \"), __jsx(\"div\", {\n        className: \"card-tools\"\n      }, __jsx(Link, {\n        href: \"/cars/add\"\n      }, __jsx(\"a\", {\n        className: \"btn btn-success btn-sm\",\n        \"data-toggle\": \"tooltip\",\n        title: \"\",\n        \"data-original-title\": \"Nouvelle\"\n      }, __jsx(\"i\", {\n        className: \"fa fa-pen-alt\"\n      }), \" Nouveau\"))));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var color = this.state.color;\n      return __jsx(AdminLayout, null, __jsx(Page, {\n        title: \"V\\xE9hicules\",\n        fariane: this.fariane\n      }, __jsx(Mutation, {\n        mutation: create_color,\n        variables: {\n          data: this.state.color\n        }\n      }, function (postMutation) {\n        return __jsx(ColorForm, {\n          color: color,\n          onSubmit: function onSubmit(event) {\n            //alert(\"hello\")\n            event.preventDefault(); //console.log(car)\n\n            postMutation().then(function (result) {\n              //this.props.history.goBack();\n              alert('Le véhicule a bien été crée.', 'success');\n              Router.push(\"/colors/view?colorId=\" + result.data.createColor.id);\n            });\n          },\n          onChange: function onChange(color) {\n            return _this2.setState({\n              color: color\n            });\n          }\n        });\n      })));\n    }\n  }]);\n\n  return Add;\n}(React.Component);\n\nexport default withData(withRouter(Add));","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var __jsx = React.createElement;\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport React from 'react';\nimport AdminLayout from '../../components/AdminLayout';\nimport { get_color, update_color } from '../../components/color/queries';\nimport { Query, Mutation } from 'react-apollo';\nimport withData from '../../lib/withData';\nimport { Table, Row, Col } from 'react-bootstrap';\nimport Page from '../../components/Page';\nimport Card from '../../components/Card';\nimport { withRouter } from 'next/router';\nimport ColorForm from '../../components/color/ColorForm';\nimport Router from 'next/router';\n\nclass Edit extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      colorId\n    } = this.props.router.query;\n    this.state = {\n      colorId: colorId,\n      color: null\n    };\n    this.fariane = [{\n      title: \"Acceuil\",\n      path: \"/\"\n    }, {\n      title: \"Couleurs\",\n      path: \"/colors/\"\n    }];\n    this.onDelete = this.onDelete.bind(this);\n  }\n\n  onDelete() {\n    window.flash('La couleur a bien été supprimée.', 'success');\n    this.props.history.push(\"/colors/\");\n  }\n\n  header() {\n    const {\n      colorId\n    } = this.state;\n    return __jsx(React.Fragment, null, __jsx(\"h3\", {\n      className: \"card-title\"\n    }, \"Couleurs #\" + colorId), __jsx(\"div\", {\n      className: \"card-tools\"\n    }, __jsx(Link, {\n      href: \"/colors/edit/\" + colorId\n    }, __jsx(\"a\", {\n      className: \"btn btn-success btn-sm\",\n      \"data-toggle\": \"tooltip\",\n      title: \"\",\n      \"data-original-title\": \"Nouvelle\"\n    }, __jsx(\"i\", {\n      className: \"fa fa-pen-alt\"\n    }), \" Modifier\"))));\n  }\n\n  render() {\n    let {\n      colorId,\n      color\n    } = this.state;\n    if (color) delete color.id;\n    return __jsx(AdminLayout, null, __jsx(Page, {\n      title: \"Couleurs\",\n      fariane: this.fariane\n    }, __jsx(Query, {\n      query: get_color,\n      variables: {\n        colorId\n      },\n      _pollInterval: 3000\n    }, ({\n      loading,\n      error,\n      data\n    }) => {\n      if (loading) return __jsx(\"div\", null, \"Chargement en cours ...\");\n\n      if (error) {\n        console.log(error);\n        return __jsx(\"div\", null, \"Error\");\n      }\n\n      console.log(data);\n      if (!data.color) return \"Color not found\";\n\n      if (this.state.color == null) {\n        delete data.color.__typename;\n        color = this.state.color = data.color;\n      } //console.log(user)\n\n\n      return __jsx(Mutation, {\n        mutation: update_color,\n        variables: {\n          id: colorId,\n          data: this.state.color\n        }\n      }, postMutation => __jsx(ColorForm, {\n        color: color,\n        onSubmit: event => {\n          //alert(\"hello\")\n          event.preventDefault(); //console.log(user)\n\n          postMutation().then(result => {\n            //this.props.history.goBack();\n            //console.log(result)\n            alert('La couleur a bien été modifié.', 'success');\n            Router.push(\"/colors/view?colorId=\" + result.data.updateColor.id);\n          });\n        },\n        onChange: color => this.setState({\n          color: color\n        })\n      }));\n    })));\n  }\n\n}\n\nexport default withData(withRouter(Edit));","map":null,"metadata":{},"sourceType":"module"}
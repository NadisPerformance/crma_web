{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/belabed90/Documents/GitHub/crma_web/components/album/MultiUpload.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Query, Mutation, useMutation } from 'react-apollo';\nimport { create_album } from './queries';\nimport { create_image } from '../image/queries';\nimport ImageDeleteButton from '../image/DeleteButton';\n\nvar MultiUpload = /*#__PURE__*/function (_Component) {\n  _inherits(MultiUpload, _Component);\n\n  var _super = _createSuper(MultiUpload);\n\n  function MultiUpload(props) {\n    var _this;\n\n    _classCallCheck(this, MultiUpload);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"fileObj\", []);\n\n    _defineProperty(_assertThisInitialized(_this), \"fileArray\", []);\n\n    _this.state = {\n      file: [null],\n      albumId: null,\n      album: {\n        title: \"Test\"\n      },\n      image: {\n        albumId: null,\n        file: null\n      },\n      uploaded_images: []\n    };\n    if (props.album) _this.state.uploaded_images = props.album.images;\n    _this.uploadFile = _this.uploadFile.bind(_assertThisInitialized(_this));\n    _this.uploadFiles = _this.uploadFiles.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(MultiUpload, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      //const [createAlbum, { data }] = useMutation(createAlbum);\n      //createAlbum({ variables: { data:this.state.album } });\n      var album = this.props.album;\n      if (album && album.id) this.setAlbumId(album.id);\n\n      if (album != null) {\n        this.state.uploaded_images = album.images;\n      }\n\n      console.log(album);\n    }\n  }, {\n    key: \"uploadFile\",\n    value: function () {\n      var _uploadFile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(file) {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (file) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", null);\n\n              case 2:\n                this.setImageFile(file);\n                console.log(file);\n\n                if (this.state.albumId) {\n                  _context.next = 7;\n                  break;\n                }\n\n                _context.next = 7;\n                return this.createAlbum().then(function (result) {\n                  _this2.setAlbumId(result.data.createAlbum.id);\n                });\n\n              case 7:\n                this.uploadImage().then(function (result) {\n                  _this2.state.uploaded_images.push(result.data.createImage);\n\n                  _this2.setState({\n                    uploaded_images: _this2.state.uploaded_images\n                  }); //alert(\"Image uploaded \"+result.data.createImage.id)\n\n                });\n                this.fileObj.push(file);\n                this.fileArray.push(URL.createObjectURL(file)); //  console.log(this.fileObj)\n                //this.setState({ file: this.fileArray })\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function uploadFile(_x) {\n        return _uploadFile.apply(this, arguments);\n      }\n\n      return uploadFile;\n    }()\n  }, {\n    key: \"uploadFiles\",\n    value: function uploadFiles(e) {\n      e.preventDefault();\n      console.log(this.state.file);\n    }\n  }, {\n    key: \"setAlbumId\",\n    value: function setAlbumId(value) {\n      this.state.image.albumId = value * 1;\n      this.state.albumId = value * 1;\n      this.setState({\n        image: this.state.image\n      });\n      this.setState({\n        albumId: value * 1\n      });\n      this.onChange();\n    }\n  }, {\n    key: \"createAlbum\",\n    value: function () {\n      var _createAlbum = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function createAlbum() {\n        return _createAlbum.apply(this, arguments);\n      }\n\n      return createAlbum;\n    }()\n  }, {\n    key: \"setImageFile\",\n    value: function setImageFile(file) {\n      this.state.image.file = file;\n      console.log(file);\n      this.setState({\n        image: this.state.image\n      });\n    }\n  }, {\n    key: \"deleteImage\",\n    value: function deleteImage(imageId) {\n      var images = this.state.uploaded_images;\n\n      for (var i = 0; i < images.length; i++) {\n        if (images[i].id == imageId) delete images[i];\n      }\n\n      this.setState({\n        uploaded_images: images\n      });\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange() {\n      if (this.props.onChange) this.props.onChange(this.state.albumId);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          album = _this$state.album,\n          albumId = _this$state.albumId;\n      return __jsx(Mutation, {\n        mutation: create_album,\n        variables: {\n          data: this.state.album\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }\n      }, function (postMutation) {\n        _this3.createAlbum = postMutation;\n        return __jsx(React.Fragment, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 22\n          }\n        }, (_this3.state.uploaded_images || []).map(function (image) {\n          return __jsx(\"div\", {\n            className: \"col-sm-12 row\",\n            style: {\n              backgroundColor: 'white',\n              padding: '2px',\n              margin: '2px'\n            },\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }\n          }, __jsx(\"div\", {\n            className: \"col-sm-4\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 21\n            }\n          }, __jsx(\"img\", {\n            src: image.image_url,\n            alt: \"...\",\n            width: \"100px\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 25\n            }\n          })), __jsx(\"div\", {\n            className: \"col-sm-4\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 21\n            }\n          }), __jsx(\"div\", {\n            className: \"col-sm-4\",\n            style: {\n              padding: '30px'\n            },\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 21\n            }\n          }, __jsx(ImageDeleteButton, {\n            imageId: image.id,\n            onDelete: function onDelete(imageId) {\n              return _this3.deleteImage(imageId);\n            },\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 23\n            }\n          })));\n        }), __jsx(\"div\", {\n          className: \"form-group\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }\n        }, __jsx(\"input\", {\n          type: \"file\",\n          className: \"form-control\",\n          id: \"file\",\n          onChange: function onChange(_ref) {\n            var _ref$target = _ref.target,\n                validity = _ref$target.validity,\n                _ref$target$files = _slicedToArray(_ref$target.files, 1),\n                file = _ref$target$files[0];\n\n            return _this3.uploadFile(file);\n          },\n          style: {\n            display: 'none'\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 21\n          }\n        })), __jsx(Mutation, {\n          mutation: create_image,\n          variables: {\n            data: _this3.state.image\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }\n        }, function (postMutation) {\n          _this3.uploadImage = postMutation;\n          return __jsx(\"button\", {\n            type: \"button\",\n            className: \"btn btn-danger btn-block\",\n            onClick: function onClick() {\n              return document.getElementById('file').click();\n            },\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 23\n            }\n          }, \"Charger des photos\");\n        }));\n      });\n    }\n  }]);\n\n  return MultiUpload;\n}(Component);\n\nexport { MultiUpload as default };","map":{"version":3,"sources":["/Users/belabed90/Documents/GitHub/crma_web/components/album/MultiUpload.js"],"names":["React","Component","Query","Mutation","useMutation","create_album","create_image","ImageDeleteButton","MultiUpload","props","state","file","albumId","album","title","image","uploaded_images","images","uploadFile","bind","uploadFiles","id","setAlbumId","console","log","setImageFile","createAlbum","then","result","data","uploadImage","push","createImage","setState","fileObj","fileArray","URL","createObjectURL","e","preventDefault","value","onChange","imageId","i","length","postMutation","map","backgroundColor","padding","margin","image_url","deleteImage","target","validity","files","display","document","getElementById","click"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Query, Mutation , useMutation} from 'react-apollo'\nimport {create_album} from './queries'\nimport {create_image} from '../image/queries'\nimport ImageDeleteButton from '../image/DeleteButton'\nexport default class MultiUpload extends Component {\n\n    fileObj = [];\n    fileArray = [];\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            file: [null],\n            albumId:null,\n            album:{\n              title:\"Test\"\n            },\n            image:{\n              albumId:null,\n              file: null\n            },\n            uploaded_images:[]\n        }\n        if(props.album)  \n         this.state.uploaded_images = props.album.images\n        this.uploadFile = this.uploadFile.bind(this)\n        this.uploadFiles = this.uploadFiles.bind(this)\n    }\n    componentDidMount(){\n      //const [createAlbum, { data }] = useMutation(createAlbum);\n      //createAlbum({ variables: { data:this.state.album } });\n      const {album} = this.props\n      if(album && album.id)\n        this.setAlbumId(album.id)\n      if(album != null ){\n         this.state.uploaded_images = album.images\n      }\n      console.log(album)\n\n    }\n    async uploadFile(file) {\n        if(!file )\n          return null\n        this.setImageFile(file)\n        console.log(file)\n        if(  !this.state.albumId )\n          await this.createAlbum().then((result)=>{\n            this.setAlbumId(result.data.createAlbum.id)\n          })\n        this.uploadImage().then((result)=>{\n          this.state.uploaded_images.push(result.data.createImage)\n          this.setState({uploaded_images:this.state.uploaded_images})\n          //alert(\"Image uploaded \"+result.data.createImage.id)\n        })\n        this.fileObj.push(file)\n        this.fileArray.push(URL.createObjectURL(file))\n      //  console.log(this.fileObj)\n        //this.setState({ file: this.fileArray })\n    }\n\n    uploadFiles(e) {\n        e.preventDefault()\n        console.log(this.state.file)\n    }\n    setAlbumId(value){\n      this.state.image.albumId =  value * 1\n      this.state.albumId = value * 1\n      this.setState({image:this.state.image})\n      this.setState({albumId:value *1})\n      this.onChange()\n    }\n    async createAlbum(){\n\n    }\n    setImageFile(file){\n       this.state.image.file = file\n       console.log(file)\n       this.setState({image:this.state.image})\n    }\n    deleteImage(imageId){\n      var images = this.state.uploaded_images\n      for(var i= 0; i < images.length; i++)\n        if( images[i].id == imageId)\n          delete images[i]\n      this.setState({uploaded_images:images})\n    }\n    onChange(){\n      if(this.props.onChange)\n        this.props.onChange(this.state.albumId)\n    }\n    render() {\n        const {album, albumId} = this.state\n        return (\n          <Mutation mutation={create_album} variables={{data:this.state.album}} >\n            {postMutation => {\n             this.createAlbum = postMutation\n             return (<React.Fragment>\n               {(this.state.uploaded_images || []).map(image => (\n                <div className=\"col-sm-12 row\" style={{backgroundColor:'white',padding:'2px',margin:'2px'}}>\n                    <div className=\"col-sm-4\" >\n                        <img src={image.image_url} alt=\"...\" width=\"100px\" />\n                    </div>\n                    <div className=\"col-sm-4\" >\n                    </div>\n                    <div className=\"col-sm-4\" style={{padding: '30px'}} >\n                      <ImageDeleteButton imageId={image.id} onDelete={(imageId)=>this.deleteImage(imageId)} />\n                    </div>\n                </div>\n               ))}\n                <div className=\"form-group\">\n                    <input type=\"file\" className=\"form-control\" id=\"file\"\n                    onChange={({target: {validity,files: [file],},})=>this.uploadFile(file)}\n                      style={{display:'none'}}/>\n                </div>\n                <Mutation mutation={create_image} variables={{data:this.state.image}} >\n                  {postMutation =>{\n                    this.uploadImage = postMutation\n                    return (\n                      <button type=\"button\" className=\"btn btn-danger btn-block\" onClick={()=>document.getElementById('file').click()}>Charger des photos</button>\n                    )\n                  } }\n                </Mutation>\n            </React.Fragment >\n          )}\n          }\n        </Mutation>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}
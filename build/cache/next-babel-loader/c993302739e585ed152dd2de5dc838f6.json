{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { Form, Row, Col, Button, InputGroup } from 'react-bootstrap';\n\nvar CategoryForm = /*#__PURE__*/function (_React$Component) {\n  _inherits(CategoryForm, _React$Component);\n\n  var _super = _createSuper(CategoryForm);\n\n  function CategoryForm(props) {\n    var _this;\n\n    _classCallCheck(this, CategoryForm);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      category: {\n        name: \"\"\n      }\n    };\n    return _this;\n  }\n\n  _createClass(CategoryForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var category = this.props.category;\n\n      if (category) {\n        this.state.category = category;\n      }\n\n      this.onChange();\n    }\n  }, {\n    key: \"setName\",\n    value: function setName(value) {\n      this.state.category.name = value;\n      this.setState({\n        category: this.state.category\n      });\n      this.onChange();\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange() {\n      if (this.props.onChange) this.props.onChange(this.state.category);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          category = _this$state.category,\n          show_password = _this$state.show_password;\n      return __jsx(Form, {\n        onSubmit: function onSubmit(event) {\n          if (_this2.props.onSubmit) _this2.props.onSubmit(event);\n        }\n      }, __jsx(Form.Group, {\n        controlId: \"formBasicEmail\"\n      }, __jsx(Form.Label, null, \"Nom:\"), __jsx(Form.Control, {\n        value: category.name,\n        type: \"text\",\n        onChange: function onChange(event) {\n          return _this2.setName(event.target.value);\n        },\n        placeholder: \"Nom de la marque\"\n      })), __jsx(\"div\", {\n        className: \"text-right\",\n        style: {\n          margin: 10\n        }\n      }, __jsx(Button, {\n        variant: \"primary\",\n        type: \"submit\"\n      }, \"Enregistrer\")));\n    }\n  }]);\n\n  return CategoryForm;\n}(React.Component);\n\nvar styles = {\n  btnXs: {\n    padding: \".25rem .4rem\",\n    fontSize: \".875rem\",\n    lineHeight: 0.5,\n    borderRadius: \".2rem\"\n  }\n};\nexport default CategoryForm;","map":null,"metadata":{},"sourceType":"module"}
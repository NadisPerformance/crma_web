{"ast":null,"code":"var _jsxFileName = \"/Users/belabed90/Documents/GitHub/crma_web/components/album/MultiUpload.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Query, Mutation, useMutation } from 'react-apollo';\nimport { create_album } from './queries';\nimport { create_image } from '../image/queries';\nexport default class MultiUpload extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"fileObj\", []);\n\n    _defineProperty(this, \"fileArray\", []);\n\n    this.state = {\n      file: [null],\n      albumId: null,\n      album: {\n        title: \"Test\"\n      },\n      image: {\n        albumId: null,\n        file: null\n      }\n    };\n    this.uploadMultipleFiles = this.uploadMultipleFiles.bind(this);\n    this.uploadFiles = this.uploadFiles.bind(this);\n  }\n\n  componentDidMount() {//const [createAlbum, { data }] = useMutation(createAlbum);\n    //createAlbum({ variables: { data:this.state.album } });\n  }\n\n  async uploadMultipleFiles(e) {\n    if (!this.state.albumId) await this.createAlbum().then(result => {\n      this.setAlbumId(result.data.createAlbum.id);\n    });\n    this.setImageFile(e.target.files[0]);\n    this.uploadImage().then(result => {\n      alert(\"Image uploaded \" + result.data.createImage.id);\n    });\n    this.fileObj.push(e.target.files[0]);\n    this.fileArray.push(URL.createObjectURL(e.target.files[0]));\n    console.log(this.fileObj);\n    this.setState({\n      file: this.fileArray\n    });\n  }\n\n  uploadFiles(e) {\n    e.preventDefault();\n    console.log(this.state.file);\n  }\n\n  setAlbumId(value) {\n    this.state.image.albumId = value;\n    this.setState({\n      image: this.state.image\n    });\n    this.setState({\n      albumId: value\n    });\n  }\n\n  async createAlbum() {}\n\n  setImageFile(file) {\n    this.state.image.file = file;\n    console.log(file);\n    this.setState({\n      image: this.state.image\n    });\n  }\n\n  render() {\n    const {\n      album,\n      albumId\n    } = this.state;\n    return __jsx(Mutation, {\n      mutation: create_album,\n      variables: {\n        data: this.state.album\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, postMutation => {\n      this.createAlbum = postMutation;\n      return __jsx(\"form\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 22\n        }\n      }, (this.fileArray || []).map(url => __jsx(\"div\", {\n        className: \"col-sm-12 row\",\n        style: {\n          backgroundColor: 'white',\n          padding: '2px',\n          margin: '2px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        className: \"col-sm-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }\n      }, __jsx(\"img\", {\n        src: url,\n        alt: \"...\",\n        width: \"100px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }\n      })), __jsx(\"div\", {\n        className: \"col-sm-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }\n      }), __jsx(\"div\", {\n        className: \"col-sm-4\",\n        style: {\n          padding: '30px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }\n      }, __jsx(\"a\", {\n        onClick: () => alert(\"hello\"),\n        className: \"btn btn-danger btn-sm\",\n        style: {\n          verticalAlign: 'middle'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 23\n        }\n      }, __jsx(\"i\", {\n        className: \"fa fa-trash\",\n        style: {\n          color: 'white'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }\n      }))))), __jsx(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }\n      }, __jsx(\"input\", {\n        type: \"file\",\n        className: \"form-control\",\n        id: \"file\",\n        onChange: this.uploadMultipleFiles,\n        _multiple: true,\n        style: {\n          display: 'none'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }\n      })), __jsx(Mutation, {\n        mutation: create_image,\n        variables: {\n          data: this.state.image\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }\n      }, postMutation => {\n        this.uploadImage = postMutation;\n        return __jsx(\"button\", {\n          type: \"button\",\n          className: \"btn btn-danger btn-block\",\n          onClick: () => document.getElementById('file').click(),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 23\n          }\n        }, \"Charger des photos\");\n      }));\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/belabed90/Documents/GitHub/crma_web/components/album/MultiUpload.js"],"names":["React","Component","Query","Mutation","useMutation","create_album","create_image","MultiUpload","constructor","props","state","file","albumId","album","title","image","uploadMultipleFiles","bind","uploadFiles","componentDidMount","e","createAlbum","then","result","setAlbumId","data","id","setImageFile","target","files","uploadImage","alert","createImage","fileObj","push","fileArray","URL","createObjectURL","console","log","setState","preventDefault","value","render","postMutation","map","url","backgroundColor","padding","margin","verticalAlign","color","display","document","getElementById","click"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Query, Mutation , useMutation} from 'react-apollo'\nimport {create_album} from './queries'\nimport {create_image} from '../image/queries'\nexport default class MultiUpload extends Component {\n\n    fileObj = [];\n    fileArray = [];\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            file: [null],\n            albumId:null,\n            album:{\n              title:\"Test\"\n            },\n            image:{\n              albumId:null,\n              file: null\n            }\n        }\n        this.uploadMultipleFiles = this.uploadMultipleFiles.bind(this)\n        this.uploadFiles = this.uploadFiles.bind(this)\n    }\n    componentDidMount(){\n      //const [createAlbum, { data }] = useMutation(createAlbum);\n      //createAlbum({ variables: { data:this.state.album } });\n    }\n    async uploadMultipleFiles(e) {\n        if(  !this.state.albumId )\n          await this.createAlbum().then((result)=>{\n            this.setAlbumId(result.data.createAlbum.id)\n          })\n        this.setImageFile(e.target.files[0])\n        this.uploadImage().then((result)=>{\n          alert(\"Image uploaded \"+result.data.createImage.id)\n        })\n        this.fileObj.push(e.target.files[0])\n        this.fileArray.push(URL.createObjectURL(e.target.files[0]))\n        console.log(this.fileObj)\n        this.setState({ file: this.fileArray })\n    }\n\n    uploadFiles(e) {\n        e.preventDefault()\n        console.log(this.state.file)\n    }\n    setAlbumId(value){\n      this.state.image.albumId =  value\n      this.setState({image:this.state.image})\n      this.setState({albumId:value})\n    }\n    async createAlbum(){\n\n    }\n    setImageFile(file){\n       this.state.image.file = file\n       console.log(file)\n       this.setState({image:this.state.image})\n    }\n\n    render() {\n        const {album, albumId} = this.state\n        return (\n          <Mutation mutation={create_album} variables={{data:this.state.album}} >\n            {postMutation => {\n             this.createAlbum = postMutation\n             return (<form>\n               {(this.fileArray || []).map(url => (\n                <div className=\"col-sm-12 row\" style={{backgroundColor:'white',padding:'2px',margin:'2px'}}>\n                    <div className=\"col-sm-4\" >\n                        <img src={url} alt=\"...\" width=\"100px\" />\n                    </div>\n                    <div className=\"col-sm-4\" >\n                    </div>\n                    <div className=\"col-sm-4\" style={{padding: '30px'}} >\n                      <a onClick={()=>alert(\"hello\")} className=\"btn btn-danger btn-sm\"  style={{verticalAlign: 'middle'}}>\n                        <i className=\"fa fa-trash\" style={{color:'white'}}></i>\n                      </a>\n                    </div>\n                </div>\n               ))}\n                <div className=\"form-group\">\n                    <input type=\"file\" className=\"form-control\" id=\"file\" onChange={this.uploadMultipleFiles} _multiple  style={{display:'none'}}/>\n                </div>\n                <Mutation mutation={create_image} variables={{data:this.state.image}} >\n                  {postMutation =>{\n                    this.uploadImage = postMutation\n                    return (\n                      <button type=\"button\" className=\"btn btn-danger btn-block\" onClick={()=>document.getElementById('file').click()}>Charger des photos</button>\n                    )\n                  } }\n                </Mutation>\n            </form >\n          )}\n          }\n        </Mutation>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}